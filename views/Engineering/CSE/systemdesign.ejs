<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>System Design Basics for CSE Students</title>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
  <style>
    /* Base Styles */
    :root {
      --primary-bg: #0A192F; /* Dark blue background */
      --section-bg: #112240; /* Slightly lighter blue */
      --card-bg: #172A45; /* Card background */
      --card-hover: #1D3557; /* Card hover effect */
      --text-primary: #E6F1FF; /* Light text color */
      --text-secondary: #A8B2D1; /* Muted text color */
      --accent: #00B4D8; /* Teal blue accent */
      --accent-hover: #0096C7; /* Darker teal for hover */
      --highlight: #48CAE4; /* Bright teal for highlights */
      --border: #1D3557; /* Border color */
    }

    body {
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
      margin: 0;
      padding: 0;
      background: var(--primary-bg);
      color: var(--text-primary);
      line-height: 1.6;
    }

    /* Navbar */
    .navbar {
      display: flex;
      justify-content: center;
      flex-wrap: wrap;
      background-color: rgba(10, 25, 47, 0.95);
      padding: 1rem;
      position: sticky;
      top: 0;
      z-index: 1000;
      backdrop-filter: blur(8px);
      box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    }

    .navbar a {
      color: var(--text-primary);
      margin: 8px 12px;
      text-decoration: none;
      font-size: 16px;
      position: relative;
      padding: 6px 0;
      transition: color 0.3s;
    }

    .navbar a:hover {
      color: var(--accent);
    }

    /* Header */
    header {
      background: linear-gradient(135deg, #112240 0%, #0A192F 100%);
      color: white;
      text-align: center;
      padding: 3rem 1rem;
      border-bottom: 3px solid var(--accent);
    }

    header h1 {
      font-size: 2.5rem;
      margin-bottom: 1rem;
      text-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
    }

    header p {
      font-size: 1.2rem;
      max-width: 700px;
      margin: 0 auto;
      color: rgba(255, 255, 255, 0.9);
    }

    /* Container */
    .container {
      padding: 2rem;
      max-width: 1100px;
      margin: auto;
    }

    /* Section Titles */
    section h2 {
      text-align: center;
      color: var(--accent);
      margin-bottom: 2rem;
      position: relative;
      display: inline-block;
      padding-bottom: 0.5rem;
    }

    section h2::after {
      content: '';
      position: absolute;
      width: 60%;
      height: 3px;
      background: linear-gradient(90deg, transparent, var(--accent), transparent);
      bottom: 0;
      left: 20%;
    }

    /* Lists */
    ul {
      list-style: none;
      padding: 0;
      margin: 0;
    }

    li {
      margin-bottom: 15px;
      display: flex;
      align-items: flex-start;
      gap: 10px;
    }

    li i {
      color: var(--accent);
      margin-top: 4px;
    }

    /* Links */
    a {
      color: var(--accent);
      text-decoration: none;
      transition: color 0.3s ease;
    }

    a:hover {
      color: var(--accent-hover);
    }

    /* Cards */
    .tech-card {
      background: var(--card-bg);
      padding: 20px;
      border-radius: 12px;
      box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
      margin-bottom: 25px;
      transition: all 0.3s ease;
      border: 1px solid var(--border);
    }

    .tech-card:hover {
      transform: translateY(-5px);
      box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);
      background: var(--card-hover);
      border-color: var(--accent);
    }

    .tech-card h3 {
      color: var(--highlight);
      margin-top: 0;
      font-size: 1.4rem;
      border-bottom: 2px solid var(--border);
      padding-bottom: 10px;
      margin-bottom: 15px;
    }

    .tech-card p {
      color: var(--text-secondary);
      margin-bottom: 1.5rem;
      line-height: 1.6;
    }

    /* Resource Grid */
    .resource-grid {
      display: grid;
      grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
      gap: 20px;
      margin-top: 20px;
    }

    .resource-card {
      background: var(--card-bg);
      border-radius: 10px;
      padding: 20px;
      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
      transition: all 0.3s ease;
      border: 1px solid var(--border);
      height: 100%;
      display: flex;
      flex-direction: column;
    }

    .resource-card:hover {
      transform: translateY(-5px);
      box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);
      border-color: var(--accent);
    }

    .resource-card h3 {
      color: var(--highlight);
      margin-top: 0;
      font-size: 1.2rem;
      margin-bottom: 10px;
    }

    .resource-card p {
      color: var(--text-secondary);
      flex-grow: 1;
      margin-bottom: 15px;
    }

    .resource-card .btn {
      display: inline-block;
      background: var(--accent);
      color: white;
      padding: 8px 15px;
      border-radius: 5px;
      text-decoration: none;
      transition: background 0.3s;
      text-align: center;
    }

    .resource-card .btn:hover {
      background: var(--accent-hover);
    }

    /* Steps */
    .steps {
      counter-reset: step-counter;
      margin: 2rem 0;
    }

    .step {
      background: var(--card-bg);
      border-radius: 10px;
      padding: 20px;
      margin-bottom: 20px;
      position: relative;
      border: 1px solid var(--border);
    }

    .step h3 {
      color: var(--highlight);
      margin-top: 0;
      display: flex;
      align-items: center;
      gap: 10px;
    }

    .step h3::before {
      counter-increment: step-counter;
      content: counter(step-counter);
      background: var(--accent);
      color: white;
      width: 30px;
      height: 30px;
      border-radius: 50%;
      display: flex;
      align-items: center;
      justify-content: center;
      font-size: 0.9rem;
    }

    /* Footer */
    footer {
      margin-top: 40px;
      text-align: center;
      padding: 20px;
      font-size: 14px;
      background-color: var(--section-bg);
      color: var(--text-secondary);
      border-top: 1px solid var(--border);
    }

    footer p {
      margin: 0;
    }

    /* Responsive Design */
    @media (max-width: 768px) {
      .navbar {
        justify-content: flex-start;
        overflow-x: auto;
        padding: 0.8rem;
      }
      
      .navbar a {
        white-space: nowrap;
        margin: 8px 10px;
        font-size: 14px;
      }
      
      header h1 {
        font-size: 2rem;
      }

      header p {
        font-size: 1rem;
      }

      .container {
        padding: 1.5rem;
      }

      section h2 {
        font-size: 1.8rem;
        text-align: center;
        display: block;
      }

      .resource-grid {
        grid-template-columns: 1fr;
      }
    }

    @media (max-width: 480px) {
      header {
        padding: 2rem 1rem;
      }

      header h1 {
        font-size: 1.8rem;
      }

      .container {
        padding: 1rem;
      }

      section h2 {
        font-size: 1.6rem;
      }

      .tech-card, .resource-card, .step {
        padding: 15px;
      }
    }
  </style>
</head>

<body>

<div class="navbar">
  <a href="#intro">Why System Design?</a>
  <a href="#basics">Basics</a>
  <a href="#resources">Resources</a>
  <a href="#next-steps">Next Steps</a>
  <a href="/Engineering/CSE/cse.ejs">Go Back</a>
</div>

<header>
  <h1>System Design Basics</h1>
  <p>A beginner's guide to understanding system design for CSE students</p>
</header>

<div class="container">

  <section id="intro">
    <h2>🚀 Why System Design?</h2>
    <div class="tech-card">
      <h3>Why Should You Learn System Design?</h3>
      <p>System Design is a crucial skill for every CSE student because:</p>
      <ul>
        <li><i class="fas fa-check-circle"></i> <strong>Career Growth:</strong> It's a key skill tested in interviews at top tech companies</li>
        <li><i class="fas fa-check-circle"></i> <strong>Better Projects:</strong> You'll build more scalable and efficient applications</li>
        <li><i class="fas fa-check-circle"></i> <strong>Real-world Skills:</strong> Academic courses often don't cover these practical aspects</li>
        <li><i class="fas fa-check-circle"></i> <strong>Problem Solving:</strong> It teaches you to think about the big picture</li>
      </ul>
    </div>
  </section>

  <section id="basics">
    <h2>📚 System Design Basics</h2>
    
    <div class="steps">
      <div class="step">
        <h3>Understand the Building Blocks</h3>
        <p>Start by learning these fundamental components:</p>
        <ul>
          <li><i class="fas fa-server"></i> <strong>Load Balancers</strong> — Distribute traffic across multiple servers</li>
          <li><i class="fas fa-database"></i> <strong>Databases</strong> — SQL vs NoSQL, when to use each</li>
          <li><i class="fas fa-bolt"></i> <strong>Caching</strong> — Speed up data access with Redis or Memcached</li>
          <li><i class="fas fa-network-wired"></i> <strong>APIs</strong> — How services communicate with each other</li>
        </ul>
      </div>
      
      <div class="step">
        <h3>Learn About Scalability</h3>
        <p>Understand how systems grow to handle more users:</p>
        <ul>
          <li><i class="fas fa-arrows-alt-h"></i> <strong>Horizontal Scaling</strong> — Adding more machines</li>
          <li><i class="fas fa-arrow-up"></i> <strong>Vertical Scaling</strong> — Adding more power to existing machines</li>
          <li><i class="fas fa-globe"></i> <strong>Content Delivery Networks (CDNs)</strong> — Serving content faster globally</li>
          <li><i class="fas fa-database"></i> <strong>Database Sharding</strong> — Splitting data across multiple databases</li>
        </ul>
      </div>
      
      <div class="step">
        <h3>Think About Reliability</h3>
        <p>Learn how to keep systems running smoothly:</p>
        <ul>
          <li><i class="fas fa-shield-alt"></i> <strong>Fault Tolerance</strong> — Systems that work even when parts fail</li>
          <li><i class="fas fa-sync"></i> <strong>Redundancy</strong> — Having backups for critical components</li>
          <li><i class="fas fa-heartbeat"></i> <strong>Health Checks</strong> — Monitoring system performance</li>
          <li><i class="fas fa-lock"></i> <strong>Security</strong> — Protecting data and access</li>
        </ul>
      </div>
    </div>
  </section>

  <section id="resources">
    <h2>🔗 Beginner-Friendly Resources</h2>
    <div class="resource-grid">
    <!-- <br> -->
      <div class="resource-card">
        <h3>System Design Primer</h3>
        <p>A comprehensive GitHub repository with beginner-friendly explanations of system design concepts.</p>
        <a href="https://github.com/donnemartin/system-design-primer" target="_blank" class="btn">Explore</a>
      </div>
<!-- <br> -->
      <div class="resource-card">
        <h3>Gaurav Sen YouTube</h3>
        <p>Easy-to-follow videos explaining system design concepts with clear visuals and examples.</p>
        <a href="https://www.youtube.com/watch?v=UzLMhqg3_Wc" target="_blank" class="btn">Watch Videos</a>
      </div>
<!-- <br> -->
      <div class="resource-card">
        <h3>ByteByteGo</h3>
        <p>Short, focused videos on specific system design concepts with great visualizations.</p>
        <a href="https://www.youtube.com/c/ByteByteGo" target="_blank" class="btn">Watch Channel</a>
      </div>
    </div>
  </section>

  <br><br>
  <section id="next-steps">
    <h2>Practice Projects for Beginners</h2>
    <div class="tech-card">
      <h3>Start Small, Think Big</h3>
      <p>Try these beginner-friendly projects to apply what you've learned:</p>
      <ul>
        <li><i class="fas fa-link"></i> <strong>URL Shortener</strong> — Create a simple service that converts long URLs to short ones</li>
        <li><i class="fas fa-comments"></i> <strong>Chat Application</strong> — Build a basic real-time messaging system</li>
        <li><i class="fas fa-image"></i> <strong>Image Sharing App</strong> — Design a system to upload and share images</li>
        <li><i class="fas fa-tasks"></i> <strong>Todo List API</strong> — Create a RESTful API for managing tasks</li>
      </ul>
      <p>For each project, think about:</p>
      <ul>
        <li><i class="fas fa-users"></i> How would it handle 100 users? 10,000 users? 1 million users?</li>
        <li><i class="fas fa-database"></i> What database would you choose and why?</li>
        <li><i class="fas fa-bolt"></i> Where would you add caching to improve performance?</li>
        <li><i class="fas fa-shield-alt"></i> How would you handle failures in different parts of the system?</li>
      </ul>
    </div>
  </section>

  <section id="sample-systems">
    <h2>🛠️ Example Systems to Study</h2>
    <ul>
      <li><i class="fas fa-mobile-alt"></i> <strong>WhatsApp</strong> — How does it deliver messages instantly to millions of users?</li>
      <li><i class="fas fa-search"></i> <strong>Google Search</strong> — How does it find results so quickly from billions of web pages?</li>
      <li><i class="fas fa-video"></i> <strong>YouTube</strong> — How does it store and stream millions of videos?</li>
      <li><i class="fas fa-shopping-cart"></i> <strong>Amazon</strong> — How does it handle millions of products and orders?</li>
    </ul>
  </section>

  <footer>
    <p>✨ Remember: Good System Design is about making the right trade-offs for your specific needs. Start simple and iterate! 🚀</p>
  </footer>

</div>

</body>
</html>
